#
# Copyright IBM Corporation 2020-2022
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   IBM Corporation - implementation
#

apiVersion: 1.0.0
metadata:
    generateName: wazianalyze-
projects:
  - name: zopeneditor-sample
    source:
      type: git
      location: "https://github.com/IBM/zopeneditor-sample.git"
      branch: analyze-sidecar
attributes:
  extensions.ignoreRecommendations: 'true'
components:
- type: chePlugin
  id: ibm/wazi-code/latest
  alias: wazi-code
  preferences:
    zowe.files.temporaryDownloadsFolder.path: /projects
    zowe.security.secureCredentialsEnabled: false
    zopeneditor.zapp.useDefaultOnlineZappSchema: true
    zopeneditor.zcodeformat.useDefaultOnlineZCodeFormatSchema: true
- type: chePlugin
  id: ibm/wazi-debug/latest
  alias: wazi-debug
- type: dockerimage
  alias: wazi-terminal
  image: icr.io/wazi-code/ibm-wazi-for-devspaces-codeready@sha256:0bf8460efac9db509eb1d0788077caea31cbaf0e5ac2208385403a35ca4757c2
  memoryLimit: 1024Mi
  volumes:
    - name: zowe
      containerPath: /home/wazi/.zowe
    - name: m2
      containerPath: /home/wazi/.m2
  mountSources: true
- type: dockerimage
  alias: wazi-analyze
  image: icr.io/wazi-code/ibm-wazi-for-devspaces-analyze@sha256:06376a41ed8ae7638ce64f64a5b263386699552d7c9fd6abea5860772f985256
  memoryLimit: 2048Mi
  volumes:
    - name: data
      containerPath: /home/wazi/data
  mountSources: true
  endpoints:
    - attributes:
        cookiesAuthEnabled: 'false'
      name: analyze-api-endpoint
      port: 4680
    - attributes:
        cookiesAuthEnabled: 'false'
      name: analyze-ui-endpoint
      port: 5000
    - attributes:
        public: 'false'
      name: analyze-weasyserv-endpoint1
      port: 4080
    - attributes:
        public: 'false'
      name: analyze-weasyserv-endpoint2
      port: 4081
    - attributes:
        public: 'false'
      name: analyze-swagger-endpoint
      port: 8000
commands:
  - name: Analyze-1. Create sample Analyze project
    actions:
      - type: exec
        component: wazi-analyze
        command: wa-create.sh sample multi && cp ${HOME}/config/autoDB.txt ${HOME}/data/autoDB.txt
        workdir: "${CHE_PROJECTS_ROOT}/zopeneditor-sample"
  - name: Analyze-2. Scan the zopeneditor-sample directory
    actions:
      - type: exec
        component: wazi-analyze
        command: cp ${HOME}/data/autoDB.txt ${HOME}/config/ && wa-scan.sh sample /projects/zopeneditor-sample/wazi-analyze.dat
        workdir: "${CHE_PROJECTS_ROOT}/zopeneditor-sample"
  - name: COBOL-1. Initialize local workspace
    actions:
      - type: exec
        component: wazi-terminal
        command: ansible-playbook -i inventories --extra-vars "host=devtest1" initialize-local-files.yaml
        workdir: "${CHE_PROJECTS_ROOT}/zopeneditor-sample/ansible"
  - name: COBOL-2. Setup dbb-zappbuild
    actions:
      - type: exec
        component: wazi-terminal
        command: ansible-playbook -i inventories --extra-vars "host=devtest1" dbb-prepare-userbuild.yml
        workdir: "${CHE_PROJECTS_ROOT}/zopeneditor-sample/ansible"
  - name: COBOL-3. Build the full SAM app on devtest1
    actions:
      - type: exec
        component: wazi-terminal
        command: ansible-playbook -i inventories --extra-vars "host=devtest1" dbb-sam-build.yml
        workdir: "${CHE_PROJECTS_ROOT}/zopeneditor-sample/ansible"
  - name: COBOL-4. Run the SAM1 app on devtest1
    actions:
      - type: exec
        component: wazi-terminal
        command: ansible-playbook -i inventories --extra-vars "host=devtest1" dbb-sam-run.yml
        workdir: "${CHE_PROJECTS_ROOT}/zopeneditor-sample/ansible"
